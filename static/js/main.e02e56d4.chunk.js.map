{"version":3,"sources":["api/api.js","components/searchbar/Searchbar.js","components/playerDetails/PlayerDetails.js","components/playerStatsNav/PlayerStatsNav.js","utils/statsUtil.js","components/statsRecord/StatsRecord.js","components/playerStatsTable/PlayerStatsTable.js","components/playerStatsChart/PlayerStatsChart.js","components/contexts.js","components/playerStats/PlayerStats.js","components/toast/Toast.js","components/toastProvider/ToastProvider.js","components/app/App.js","serviceWorker.js","index.js"],"names":["getPlayers","searchQuery","a","fetch","response","json","data","Error","getSeasonAveragesStats","playerId","season","Searchbar","props","useState","searchValue","setSearchValue","suggestions","setSuggestions","isLoading","setIsLoading","isFocused","setIsFocused","timerId","useRef","value","reason","clearTimeout","current","setTimeout","players","console","log","message","shouldRenderNoSuggestionsInfo","trim","length","useEffect","className","focusInputOnSuggestionClick","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","setPlayer","first_name","last_name","renderSuggestion","renderInputComponent","inputProps","icon","faBasketballBall","spin","placeholder","onChange","event","newValue","onFocus","onBlur","renderNoSuggestionsInfo","PlayerDetails","player","team","full_name","src","alt","PlayerStatsNav","stats","isRequestPending","onClickNext","onClickPrev","iconClass","setIconClass","faChevronLeft","onClick","games_played","min","faChevronRight","statsLabels","getLabel","key","normalizeData","maxValue","createNestedStatsObject","pts","ast","fg_pct","fgm","fga","fg3_pct","fg3m","fg3a","ft_pct","ftm","fta","reb","oreb","dreb","stl","blk","turnover","pf","createChartData","entry","normalizedValue","StatsRecord","record","label","Object","keys","row","PlayerStatsTable","nestedStats","setNestedStats","playerStats","map","PlayerStatsChart","chartData","setChartData","style","marginTop","width","aspect","fill","dataKey","domain","tick","axisLine","dot","ToastContext","React","createContext","PlayerStats","setStats","setSeason","isLoadingNewPlayer","setIsLoadingNewPlayer","setIsRequestPending","addToast","useContext","getSeason","then","seasonAveragesStats","isempty","notFoundMsg","faMeh","spinner","Toast","toast","remove","title","faCheckCircle","toastStyle","setToastStyle","toastRemoveRef","type","faExclamationCircle","faExclamationTriangle","timeoutId","faTimes","ToastProvider","children","toasts","setToasts","toastsCount","Provider","id","TransitionGroup","CSSTransition","timeout","classNames","filter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e02e56d4.chunk.js","sourcesContent":["export async function getPlayers(searchQuery) {\r\n    try {\r\n        const response = await fetch(`https://www.balldontlie.io/api/v1/players?per_page=5&search=${searchQuery}`);\r\n        const json = await response.json();\r\n        return json.data;\r\n    } catch (error) {\r\n        throw new Error(error);\r\n    }\r\n}\r\n\r\nexport async function getSeasonAveragesStats(playerId, season='2019') {\r\n    try {\r\n        const response = await fetch(`https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${playerId}&season=${season}`);\r\n        const json = await response.json();\r\n        return json.data;\r\n    } catch (error) {\r\n        throw new Error(error);\r\n    }\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport './Searchbar.css';\r\nimport { getPlayers } from '../../api/api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBasketballBall } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default function Searchbar(props) {\r\n    let [searchValue, setSearchValue] = useState('');\r\n    let [suggestions, setSuggestions] = useState([]);\r\n    let [isLoading, setIsLoading] = useState(false);\r\n    let [isFocused, setIsFocused] = useState(false);\r\n    let timerId = useRef();\r\n\r\n    useEffect(() => {\r\n        return () => clearTimeout(timerId.current);\r\n    }, []);\r\n\r\n    function getSuggestionValue(suggestion) {\r\n        props.setPlayer(suggestion);\r\n        return `${suggestion.first_name} ${suggestion.last_name}`;\r\n    }\r\n\r\n    async function onSuggestionsFetchRequested({ value, reason }) {\r\n        if (reason === 'input-focused') {\r\n            return null;\r\n        }\r\n\r\n        clearTimeout(timerId.current);\r\n        setIsLoading(true);\r\n        timerId.current = setTimeout(async () => {\r\n            try {\r\n                const players = await getPlayers(value);\r\n                setSuggestions(players);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    function onSuggestionsClearRequested() {\r\n        return null;\r\n    }\r\n\r\n    function renderSuggestion(suggestion) {\r\n        return (\r\n            <span>{`${suggestion.first_name} ${suggestion.last_name}`}</span>\r\n        );\r\n    }\r\n\r\n    function shouldRenderNoSuggestionsInfo() {\r\n        return searchValue.trim() !== '' && suggestions.length === 0 && !isLoading && isFocused;\r\n    }\r\n\r\n    function renderNoSuggestionsInfo() {\r\n        if (shouldRenderNoSuggestionsInfo()) {\r\n            return (\r\n                <div className=\"react-autosuggest__suggestions-container--open no-suggestions\">\r\n                    No players found\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function renderInputComponent(inputProps) {\r\n        if (shouldRenderNoSuggestionsInfo()) {\r\n            inputProps.className += ' react-autosuggest__input--open';\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <input {...inputProps} />\r\n                {isLoading && <FontAwesomeIcon className=\"loading-icon\" icon={faBasketballBall} spin />}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section className=\"search-container\">\r\n            <Autosuggest\r\n                focusInputOnSuggestionClick={false}\r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                getSuggestionValue={getSuggestionValue}\r\n                renderSuggestion={renderSuggestion}\r\n                renderInputComponent={renderInputComponent}\r\n                inputProps={{\r\n                    placeholder: 'Search player...',\r\n                    value: searchValue,\r\n                    onChange: (event, { newValue }) => setSearchValue(newValue),\r\n                    onFocus: () => setIsFocused(true),\r\n                    onBlur: () => setIsFocused(false),\r\n                }} />\r\n            {renderNoSuggestionsInfo()}\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport './PlayerDetails.css';\r\n\r\nexport default function PlayerDetails({ player }) {\r\n    return (\r\n        <div className=\"player-info-container\">\r\n            <div className=\"player-info\">\r\n                <h1 className=\"player-name\">{player.first_name} {player.last_name}</h1>\r\n                <h3 className=\"player-team\">{player.team.full_name}</h3>\r\n            </div>\r\n            <img src=\"shirt.svg\" alt=\"shirt\" />\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './PlayerStatsNav.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight, faBasketballBall } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function PlayerStatsNav({ stats, isLoading, isRequestPending, onClickNext, onClickPrev }) {\r\n    let [iconClass, setIconClass] = useState('arrow');\r\n\r\n    useEffect(() => {\r\n        const arrowClass = isRequestPending? 'arrow-disabled' : 'arrow';\r\n        setIconClass(arrowClass);\r\n    }, [isRequestPending]);\r\n\r\n    const seasonInfoElements = () => {\r\n        if (isLoading) {\r\n            return <FontAwesomeIcon icon={faBasketballBall} spin={isLoading} />;\r\n        }\r\n\r\n        return <>\r\n            <span className=\"season-info-element\">{`season ${stats.season}/${stats.season + 1}`}</span>\r\n            <span className=\"season-info-element\">{`games played - ${stats.games_played}`}</span>\r\n            <span className=\"season-info-element\">{`minutes - ${stats.min}`}</span>\r\n        </>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"season-info-container\">\r\n            <FontAwesomeIcon className={iconClass} icon={faChevronLeft} onClick={isRequestPending? null : () => onClickPrev()} />\r\n            <div className=\"season-info\">\r\n                {seasonInfoElements()}\r\n            </div>\r\n            <FontAwesomeIcon className={iconClass} icon={faChevronRight} onClick={isRequestPending ? null : () => onClickNext()} />\r\n        </div>\r\n    );\r\n}","const statsLabels = {\r\n    'pts': 'points',\r\n    'ast': 'assists',\r\n    'fg_pct': 'field goals %',\r\n    'fgm': 'm',\r\n    'fga': 'a',\r\n    'fg3_pct': '3-PT goals %',\r\n    'fg3m': 'm',\r\n    'fg3a': 'a',\r\n    'ft_pct': 'free throws %',\r\n    'ftm': 'm',\r\n    'fta': 'a',\r\n    'reb': 'rebounds',\r\n    'oreb': 'o',\r\n    'dreb': 'd',\r\n    'stl': 'steals',\r\n    'blk': 'blocks',\r\n    'turnover': 'turnovers',\r\n    'pf': 'personal fouls'\r\n};\r\n\r\nexport function getLabel(key) {\r\n    return statsLabels[key];\r\n};\r\n\r\nexport function normalizeData(value, maxValue) {\r\n    return (value * 100) / maxValue;\r\n};\r\n\r\nexport function createNestedStatsObject(stats) {\r\n    return {\r\n        'pts': stats.pts,\r\n        'ast': stats.ast,\r\n        'fg_pct': {\r\n            'fg_pct': stats.fg_pct,\r\n            'fgm': stats.fgm,\r\n            'fga': stats.fga\r\n        },\r\n        'fg3_pct': {\r\n            'fg3_pct': stats.fg3_pct,\r\n            'fg3m': stats.fg3m,\r\n            'fg3a': stats.fg3a\r\n        },\r\n        'ft_pct': {\r\n            'ft_pct': stats.ft_pct,\r\n            'ftm': stats.ftm,\r\n            'fta': stats.fta\r\n        },\r\n        'reb': {\r\n            'reb': stats.reb,\r\n            'oreb': stats.oreb,\r\n            'dreb': stats.dreb\r\n        },\r\n        'stl': stats.stl,\r\n        'blk': stats.blk,\r\n        'turnover': stats.turnover,\r\n        'pf': stats.pf\r\n    };\r\n};\r\n\r\nexport function createChartData(stats) {\r\n    return [\r\n        { entry: 'pts', normalizedValue: normalizeData(stats.pts, 50), value: stats.pts },\r\n        { entry: 'ast', normalizedValue: normalizeData(stats.ast, 20), value: stats.ast },\r\n        { entry: 'fg', normalizedValue: normalizeData(stats.fg_pct, 1), value: stats.fg_pct },\r\n        { entry: '3fg', normalizedValue: normalizeData(stats.fg3_pct, 1), value: stats.fg3_pct },\r\n        { entry: 'ft', normalizedValue: normalizeData(stats.ft_pct, 1), value: stats.ft_pct },\r\n        { entry: 'reb', normalizedValue: normalizeData(stats.reb, 20), value: stats.reb },\r\n        { entry: 'stl', normalizedValue: normalizeData(stats.stl, 5), value: stats.stl },\r\n        { entry: 'blk', normalizedValue: normalizeData(stats.blk, 5), value: stats.blk },\r\n        { entry: 'to', normalizedValue: normalizeData(stats.turnover, 10), value: stats.turnover },\r\n        { entry: 'pf', normalizedValue: normalizeData(stats.pf, 10), value: stats.pf }\r\n    ];\r\n}","import React from 'react';\r\nimport './StatsRecord.css';\r\nimport { getLabel } from '../../utils/statsUtil.js';\r\n\r\nexport default function StatsRecord({ record, label }) {\r\n\r\n    const row = () => {\r\n        if (typeof record === 'object') {\r\n            const value = `${record[Object.keys(record)[0]]} (${getLabel(Object.keys(record)[1])}: ${record[Object.keys(record)[1]]}, ${getLabel(Object.keys(record)[2])}: ${record[Object.keys(record)[2]]})`;\r\n            return <>\r\n                <div className=\"stats-name\">{label} </div>\r\n                <div className=\"stats-value\">{value}</div>\r\n            </>;\r\n        }\r\n\r\n        return <>\r\n            <div className=\"stats-name\">{label} </div>\r\n            <div className=\"stats-value\">{record}</div>\r\n        </>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"stats-item\">\r\n            {row()}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport StatsRecord from '../statsRecord/StatsRecord';\r\nimport { getLabel, createNestedStatsObject } from '../../utils/statsUtil.js';\r\n\r\nexport default function PlayerStatsTable({ stats }) {\r\n    let [nestedStats, setNestedStats] = useState(createNestedStatsObject(stats));\r\n\r\n    useEffect(() => {\r\n        setNestedStats(createNestedStatsObject(stats));\r\n    }, [stats]);\r\n\r\n    const playerStats = Object.keys(nestedStats)\r\n        .map(key => <StatsRecord key={key} record={nestedStats[key]} label={getLabel(key)} />);\r\n\r\n    return (<div>{playerStats}</div>);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { RadarChart, PolarGrid, PolarAngleAxis, Radar, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\r\nimport { createChartData } from '../../utils/statsUtil';\r\n\r\nexport default function PlayerStatsChart({ stats }) {\r\n    let [chartData, setChartData] = useState(createChartData(stats));\r\n\r\n    useEffect(() => {\r\n        setChartData(createChartData(stats));\r\n    }, [stats]);\r\n\r\n    return (\r\n        <div style={{ marginTop: '10px' }}>\r\n            <ResponsiveContainer width='99%' aspect={1.15}>\r\n                <RadarChart data={chartData} fill='#BBE1FA' >\r\n                    <PolarGrid />\r\n                    <PolarAngleAxis dataKey='entry' />\r\n                    <PolarRadiusAxis domain={[0, 100]} tick={false} axisLine={false} />\r\n                    <Radar dataKey=\"normalizedValue\" fill='#FEE372' dot={{ fill: '#BBE1FA' }} />\r\n                </RadarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    ) ;\r\n}","import React from 'react';\r\n\r\nexport const ToastContext = React.createContext();","import React, { useState, useEffect, useContext } from 'react';\r\nimport isempty from 'lodash.isempty';\r\nimport './PlayerStats.css';\r\nimport { getSeasonAveragesStats } from '../../api/api';\r\nimport PlayerStatsNav from '../playerStatsNav/PlayerStatsNav';\r\nimport PlayerStatsTable from '../playerStatsTable/PlayerStatsTable';\r\nimport PlayerStatsChart from '../playerStatsChart/PlayerStatsChart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMeh, faBasketballBall } from '@fortawesome/free-solid-svg-icons';\r\nimport { ToastContext } from '../contexts';\r\n\r\nexport default function PlayerStats({ playerId }) {\r\n    let [stats, setStats] = useState({});\r\n    let [season, setSeason] = useState(2019);\r\n    let [isLoadingNewPlayer, setIsLoadingNewPlayer] = useState(true);\r\n    let [isRequestPending, setIsRequestPending] = useState(true);\r\n    let { addToast } = useContext(ToastContext);\r\n\r\n    const nextSeason = () => getSeason(season + 1);\r\n    const prevSeason = () => getSeason(season - 1);\r\n\r\n    const getSeason = (value) => {\r\n        setIsRequestPending(true);\r\n        getSeasonAveragesStats(playerId, value)\r\n            .then(seasonAveragesStats => {\r\n                if (!isempty(seasonAveragesStats[0])) {\r\n                    setStats(seasonAveragesStats[0]);\r\n                    setSeason(value);\r\n                } else {\r\n                    addToast(`Stats for season ${value}/${value + 1} doesn't exist`, 'danger');\r\n                }\r\n                setIsRequestPending(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsLoadingNewPlayer(true);\r\n        setIsRequestPending(true);\r\n        getSeasonAveragesStats(playerId)\r\n            .then(seasonAveragesStats => {\r\n                setStats(seasonAveragesStats[0]);\r\n                setSeason(2019);\r\n                setIsLoadingNewPlayer(false);\r\n                setIsRequestPending(false);\r\n            });\r\n    }, [playerId]);\r\n\r\n    const notFoundMsg = <>\r\n            <FontAwesomeIcon className=\"not-found-icon\" icon={faMeh} />\r\n            <span className=\"not-found-msg\">Player stats not found</span>\r\n        </>;\r\n\r\n    const spinner = <FontAwesomeIcon className=\"spinner\" icon={faBasketballBall} spin />;\r\n\r\n    const playerStats = <>\r\n            <PlayerStatsNav stats={stats} onClick={setSeason} isLoading={isLoadingNewPlayer} isRequestPending={isRequestPending} onClickNext={nextSeason} onClickPrev={prevSeason} />\r\n            {!isLoadingNewPlayer && !isempty(stats) &&\r\n                <>\r\n                    <PlayerStatsTable stats={stats} />\r\n                    <PlayerStatsChart stats={stats} />\r\n                </>\r\n            }\r\n        </>;\r\n\r\n    return (\r\n        <>\r\n            {isempty(stats)?\r\n                (isRequestPending? spinner : notFoundMsg) :\r\n                playerStats\r\n            }\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport './Toast.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faExclamationCircle, faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Toast({ toast, remove }) {\r\n    let [toastStyle, setToastStyle] = useState({\r\n        title: 'Success',\r\n        icon: faCheckCircle\r\n    });\r\n    let toastRemoveRef = useRef();\r\n    toastRemoveRef.current = remove;\r\n\r\n    useEffect(() => {\r\n        switch(toast.type) {\r\n            case 'success':\r\n                setToastStyle({ title: 'Success', icon: faCheckCircle });\r\n                break;\r\n            case 'danger':\r\n                setToastStyle({ title: 'Error', icon: faExclamationCircle });\r\n                break;\r\n            case 'warning':\r\n                setToastStyle({ title: 'Warning', icon: faExclamationTriangle });\r\n                break;\r\n            default:\r\n                setToastStyle({ title: 'Success', icon: faCheckCircle });\r\n        }\r\n    }, [toast.type]);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => toastRemoveRef.current(), 3000);\r\n\r\n        return () => clearTimeout(timeoutId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`toast toast-${toast.type}`}>\r\n            <FontAwesomeIcon className={`toast-icon icon-${toast.type}`} icon={toastStyle.icon} />\r\n            <div className=\"toast-content\">\r\n                <p className=\"toast-title\">{toastStyle.title}</p>\r\n                <p className=\"toast-message\">{toast.message}</p>\r\n            </div>\r\n            <FontAwesomeIcon className=\"toast-icon icon-close\" icon={faTimes} onClick={remove} />\r\n        </div>\r\n    );\r\n}","import React, { useState, useRef } from 'react';\r\nimport './ToastProvider.css';\r\nimport Toast from '../toast/Toast';\r\nimport { ToastContext } from '../contexts';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nexport default function ToastProvider({ children }) {\r\n    let [toasts, setToasts] = useState([]);\r\n    let toastsCount = useRef(0);\r\n\r\n    const addToast = (message, type) => {\r\n        const id = toastsCount.current++;\r\n        const toast = { message, type, id };\r\n        setToasts([...toasts, toast]);\r\n    };\r\n\r\n    const removeToast = (id) => setToasts(toasts.filter(toast => toast.id !== id));\r\n\r\n    return (\r\n        <ToastContext.Provider value={{ addToast }}>\r\n            {children}\r\n            <TransitionGroup className=\"toast-container\">\r\n                {toasts.map((toast) =>\r\n                    <CSSTransition key={toast.id} timeout={500} classNames=\"toast\">\r\n                        <Toast toast={toast} remove={() => removeToast(toast.id)} />\r\n                    </CSSTransition>\r\n                )}\r\n            </TransitionGroup>\r\n        </ToastContext.Provider>\r\n    );\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Searchbar from '../searchbar/Searchbar';\nimport PlayerDetails from '../playerDetails/PlayerDetails';\nimport PlayerStats from '../playerStats/PlayerStats';\nimport ToastProvider from '../toastProvider/ToastProvider';\n\nexport default function App() {\n  let [player, setPlayer] = useState({\n    'id': 237,\n    'first_name': 'LeBron',\n    'height_feet': 6,\n    'height_inches': 8,\n    'last_name': 'James',\n    'position': 'F',\n    'team': {\n      'id': 14,\n      'abbreviation': 'LAL',\n      'city': 'Los Angeles',\n      'conference': 'West',\n      'division': 'Pacific',\n      'full_name': 'Los Angeles Lakers',\n      'name': 'Lakers'\n    },\n    'weight_pounds': 250\n  });\n\n  return (\n    <>\n      <header className=\"app-header\">\n        <h1 className=\"app-title\">NBA simple stats</h1>\n        <Searchbar setPlayer={setPlayer} />\n      </header>\n      <hr />\n      <ToastProvider>\n        <section className=\"player-container\">\n          <PlayerDetails player={player} />\n          <PlayerStats playerId={player.id} />\n        </section>\n      </ToastProvider>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}