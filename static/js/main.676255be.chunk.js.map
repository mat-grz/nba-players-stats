{"version":3,"sources":["api/api.js","components/contexts.js","components/searchbar/Searchbar.js","components/playerDetails/PlayerDetails.js","components/playerStatsNav/PlayerStatsNav.js","utils/statsUtil.js","components/statsRecord/StatsRecord.js","components/playerStatsTable/PlayerStatsTable.js","components/playerStatsChart/PlayerStatsChart.js","components/playerStats/PlayerStats.js","components/toast/Toast.js","components/toastProvider/ToastProvider.js","components/app/App.js","serviceWorker.js","index.js"],"names":["getPlayers","searchQuery","a","getData","getSeasonAveragesStats","playerId","season","url","fetch","response","ok","Error","statusText","json","data","ToastContext","React","createContext","FETCH_REASON","Searchbar","setPlayer","useState","searchValue","setSearchValue","suggestions","setSuggestions","isLoading","setIsLoading","isFocused","setIsFocused","addToast","useContext","timerId","useRef","useEffect","clearTimeout","current","onSuggestionsFetchRequested","value","reason","setTimeout","players","shouldRenderNoSuggestionsInfo","trim","length","className","focusInputOnSuggestionClick","onSuggestionsClearRequested","getSuggestionValue","suggestion","first_name","last_name","renderSuggestion","renderInputComponent","inputProps","icon","faBasketballBall","spin","placeholder","onChange","event","newValue","onFocus","onBlur","PlayerDetails","team","src","alt","ARROW_ICON","PlayerStatsNav","stats","isRequestPending","onClickNext","onClickPrev","iconClass","setIconClass","faChevronLeft","onClick","games_played","min","faChevronRight","statsLabels","getLabel","key","normalizeData","maxValue","createNestedStatsObject","pts","ast","fg_pct","fgm","fga","fg3_pct","fg3m","fg3a","ft_pct","ftm","fta","reb","oreb","dreb","stl","blk","turnover","pf","createChartData","entry","normalizedValue","StatsRecord","label","recordValue","tooltip","keys","Object","PlayerStatsTable","nestedStats","setNestedStats","playerStats","map","COLOR","PlayerStatsChart","chartData","setChartData","style","marginTop","width","aspect","fill","dataKey","domain","tick","axisLine","dot","PlayerStats","setStats","setSeason","setIcon","isLoadingNewPlayer","setIsLoadingNewPlayer","setIsRequestPending","nextSeason","getSeason","prevSeason","seasonAveragesStats","isempty","then","faMeh","TYPE","TOAST","SUCCESS","title","faCheckCircle","DANGER","faExclamationCircle","WARNING","faExclamationTriangle","Toast","toast","remove","toastStyle","setToastStyle","toastRemoveRef","type","timeoutId","message","faTimes","ToastProvider","children","toasts","setToasts","toastsCount","Provider","id","TransitionGroup","CSSTransition","timeout","classNames","filter","App","player","full_name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.676255be.chunk.js","sourcesContent":["export async function getPlayers(searchQuery) {\r\n    try {\r\n        return await getData(`https://www.balldontlie.io/api/v1/players?per_page=5&search=${searchQuery}`);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function getSeasonAveragesStats(playerId, season='2019') {\r\n    try {\r\n        return await getData(`https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${playerId}&season=${season}`);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nconst getData = async(url) => {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    const json = await response.json();\r\n    return json.data;\r\n};","import React from 'react';\r\n\r\nexport const ToastContext = React.createContext();","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport './Searchbar.css';\r\nimport { getPlayers } from '../../api/api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBasketballBall } from '@fortawesome/free-solid-svg-icons';\r\nimport { ToastContext } from '../contexts';\r\n\r\n// react-autosuggest onSuggestionsFetchRequested reasons\r\nconst FETCH_REASON = {\r\n    INPUT_CHANGED: 'input-changed',\r\n    INPUT_FOCUSED: 'input-focused',\r\n    ESCAPE_PRESSED: 'escape-pressed',\r\n    SUGGESTIONS_REVEALED: 'suggestions-revealed',\r\n    SUGGESTION_SELECTED: 'suggestion-selected'\r\n};\r\n\r\nexport default function Searchbar({ setPlayer }) {\r\n    let [searchValue, setSearchValue] = useState('');\r\n    let [suggestions, setSuggestions] = useState([]);\r\n    let [isLoading, setIsLoading] = useState(false);\r\n    let [isFocused, setIsFocused] = useState(false);\r\n    let { addToast } = useContext(ToastContext);\r\n    let timerId = useRef();\r\n\r\n    useEffect(() => {\r\n        return () => clearTimeout(timerId.current);\r\n    }, []);\r\n\r\n    const onSuggestionsFetchRequested = async({ value, reason }) => {\r\n        if (reason === FETCH_REASON.INPUT_FOCUSED) {\r\n            return null;\r\n        }\r\n\r\n        clearTimeout(timerId.current);\r\n        setIsLoading(true);\r\n        timerId.current = setTimeout(async () => {\r\n            try {\r\n                const players = await getPlayers(value);\r\n                setSuggestions(players);\r\n            } catch (error) {\r\n                addToast(error, 'danger');\r\n            }\r\n            setIsLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    const onSuggestionsClearRequested = () => null;\r\n\r\n    const getSuggestionValue = (suggestion) => {\r\n        setPlayer(suggestion);\r\n        return `${suggestion.first_name} ${suggestion.last_name}`;\r\n    };\r\n\r\n    const renderSuggestion = ({ first_name, last_name }) => <span>{`${first_name} ${last_name}`}</span>;\r\n\r\n    const shouldRenderNoSuggestionsInfo = searchValue.trim() !== '' && suggestions.length === 0 && !isLoading && isFocused;\r\n\r\n    const renderInputComponent = (inputProps) => {\r\n        if (shouldRenderNoSuggestionsInfo) {\r\n            inputProps.className += ' react-autosuggest__input--open';\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <input {...inputProps} />\r\n                {isLoading && <FontAwesomeIcon className=\"loading-icon\" icon={faBasketballBall} spin />}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <section className=\"search-container\">\r\n            <Autosuggest\r\n                focusInputOnSuggestionClick={false}\r\n                suggestions={suggestions}\r\n                onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n                onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n                getSuggestionValue={getSuggestionValue}\r\n                renderSuggestion={renderSuggestion}\r\n                renderInputComponent={renderInputComponent}\r\n                inputProps={{\r\n                    placeholder: 'Search player...',\r\n                    value: searchValue,\r\n                    onChange: (event, { newValue }) => setSearchValue(newValue),\r\n                    onFocus: () => setIsFocused(true),\r\n                    onBlur: () => setIsFocused(false),\r\n                }} />\r\n            {shouldRenderNoSuggestionsInfo &&\r\n                <div className=\"react-autosuggest__suggestions-container--open no-suggestions\">\r\n                    No players found\r\n                </div>\r\n            }\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './PlayerDetails.css';\r\n\r\nfunction PlayerDetails({ first_name, last_name, team = 'No team' }) {\r\n    return (\r\n        <div className=\"player-info-container\">\r\n            <div className=\"player-info\">\r\n                <h1 className=\"player-name\">{first_name} {last_name}</h1>\r\n                <h3 className=\"player-team\">{team}</h3>\r\n            </div>\r\n            <img src=\"shirt.svg\" alt=\"shirt\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nPlayerDetails.propTypes = {\r\n    first_name: PropTypes.string.isRequired,\r\n    last_name: PropTypes.string.isRequired,\r\n    team: PropTypes.string\r\n};\r\n\r\nexport default PlayerDetails;","import React, { useState, useEffect } from 'react';\r\nimport './PlayerStatsNav.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight, faBasketballBall } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ARROW_ICON = {\r\n    ACTIVE: 'arrow',\r\n    DISABLED: 'arrow-disabled'\r\n};\r\n\r\nexport default function PlayerStatsNav({ stats, isLoading, isRequestPending, onClickNext, onClickPrev }) {\r\n    let [iconClass, setIconClass] = useState(ARROW_ICON.ACTIVE);\r\n\r\n    useEffect(() => {\r\n        const arrowClass = isRequestPending ? ARROW_ICON.DISABLED : ARROW_ICON.ACTIVE;\r\n        setIconClass(arrowClass);\r\n    }, [isRequestPending]);\r\n\r\n    return (\r\n        <div className=\"season-info-container\">\r\n            <FontAwesomeIcon className={iconClass} icon={faChevronLeft} onClick={isRequestPending? null : () => onClickPrev()} />\r\n            <div className=\"season-info\">\r\n                {isLoading?\r\n                    <FontAwesomeIcon icon={faBasketballBall} spin={isLoading} /> :\r\n                    <>\r\n                        <span className=\"season-info-element\">{`season ${stats.season}/${stats.season + 1}`}</span>\r\n                        <span className=\"season-info-element\">{`games played - ${stats.games_played}`}</span>\r\n                        <span className=\"season-info-element\">{`minutes - ${stats.min}`}</span>\r\n                    </>\r\n                }\r\n            </div>\r\n            <FontAwesomeIcon className={iconClass} icon={faChevronRight} onClick={isRequestPending ? null : () => onClickNext()} />\r\n        </div>\r\n    );\r\n}","const statsLabels = {\r\n    'pts': 'points',\r\n    'ast': 'assists',\r\n    'fg_pct': 'field goals %',\r\n    'fgm': 'made',\r\n    'fga': 'attempted',\r\n    'fg3_pct': '3-PT goals %',\r\n    'fg3m': 'made',\r\n    'fg3a': 'attempted',\r\n    'ft_pct': 'free throws %',\r\n    'ftm': 'made',\r\n    'fta': 'attempted',\r\n    'reb': 'rebounds',\r\n    'oreb': 'offensive',\r\n    'dreb': 'defensive',\r\n    'stl': 'steals',\r\n    'blk': 'blocks',\r\n    'turnover': 'turnovers',\r\n    'pf': 'personal fouls'\r\n};\r\n\r\nexport function getLabel(key) {\r\n    return statsLabels[key];\r\n};\r\n\r\nexport function normalizeData(value, maxValue) {\r\n    return (value * 100) / maxValue;\r\n};\r\n\r\nexport function createNestedStatsObject(stats) {\r\n    return {\r\n        'pts': stats.pts,\r\n        'ast': stats.ast,\r\n        'fg_pct': {\r\n            'fg_pct': stats.fg_pct,\r\n            'fgm': stats.fgm,\r\n            'fga': stats.fga\r\n        },\r\n        'fg3_pct': {\r\n            'fg3_pct': stats.fg3_pct,\r\n            'fg3m': stats.fg3m,\r\n            'fg3a': stats.fg3a\r\n        },\r\n        'ft_pct': {\r\n            'ft_pct': stats.ft_pct,\r\n            'ftm': stats.ftm,\r\n            'fta': stats.fta\r\n        },\r\n        'reb': {\r\n            'reb': stats.reb,\r\n            'oreb': stats.oreb,\r\n            'dreb': stats.dreb\r\n        },\r\n        'stl': stats.stl,\r\n        'blk': stats.blk,\r\n        'turnover': stats.turnover,\r\n        'pf': stats.pf\r\n    };\r\n};\r\n\r\nexport function createChartData(stats) {\r\n    return [\r\n        { entry: 'pts', normalizedValue: normalizeData(stats.pts, 50), value: stats.pts },\r\n        { entry: 'ast', normalizedValue: normalizeData(stats.ast, 20), value: stats.ast },\r\n        { entry: 'fg', normalizedValue: normalizeData(stats.fg_pct, 1), value: stats.fg_pct },\r\n        { entry: '3fg', normalizedValue: normalizeData(stats.fg3_pct, 1), value: stats.fg3_pct },\r\n        { entry: 'ft', normalizedValue: normalizeData(stats.ft_pct, 1), value: stats.ft_pct },\r\n        { entry: 'reb', normalizedValue: normalizeData(stats.reb, 20), value: stats.reb },\r\n        { entry: 'stl', normalizedValue: normalizeData(stats.stl, 5), value: stats.stl },\r\n        { entry: 'blk', normalizedValue: normalizeData(stats.blk, 5), value: stats.blk },\r\n        { entry: 'to', normalizedValue: normalizeData(stats.turnover, 10), value: stats.turnover },\r\n        { entry: 'pf', normalizedValue: normalizeData(stats.pf, 10), value: stats.pf }\r\n    ];\r\n}","import React from 'react';\r\nimport './StatsRecord.css';\r\nimport { getLabel } from '../../utils/statsUtil.js';\r\n\r\nexport default function StatsRecord({ value, label }) {\r\n    let recordValue = value;\r\n    let tooltip = '';\r\n    if (typeof value === 'object') {\r\n        const keys = Object.keys(value);\r\n        recordValue = value[keys[0]];\r\n        tooltip = <span className=\"tooltip-text\">{`${getLabel(keys[1])}: ${value[keys[1]]}, ${getLabel(keys[2])}: ${value[keys[2]]}`}</span>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"stats-item\">\r\n            <div className=\"stats-name\">{label} </div>\r\n            <div className=\"stats-value tooltip\">\r\n                {recordValue}\r\n                {tooltip}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport StatsRecord from '../statsRecord/StatsRecord';\r\nimport { getLabel, createNestedStatsObject } from '../../utils/statsUtil.js';\r\n\r\nexport default function PlayerStatsTable({ stats }) {\r\n    let [nestedStats, setNestedStats] = useState(createNestedStatsObject(stats));\r\n\r\n    useEffect(() => {\r\n        setNestedStats(createNestedStatsObject(stats));\r\n    }, [stats]);\r\n\r\n    const playerStats = Object.keys(nestedStats)\r\n        .map(key => <StatsRecord key={key} value={nestedStats[key]} label={getLabel(key)} />);\r\n\r\n    return (<div>{playerStats}</div>);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { RadarChart, PolarGrid, PolarAngleAxis, Radar, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\r\nimport { createChartData } from '../../utils/statsUtil';\r\n\r\nconst COLOR = {\r\n    LIGHT_BLUE: '#BBE1FA',\r\n    DARK_BLUE: '#0F4C75',\r\n    YELLOW: '#FEE372',\r\n    BACKGROUND: '#1B262C'\r\n};\r\n\r\nexport default function PlayerStatsChart({ stats }) {\r\n    let [chartData, setChartData] = useState(createChartData(stats));\r\n\r\n    useEffect(() => {\r\n        setChartData(createChartData(stats));\r\n    }, [stats]);\r\n\r\n    return (\r\n        <div style={{ marginTop: '10px' }}>\r\n            <ResponsiveContainer width='99%' aspect={1.15}>\r\n                <RadarChart data={chartData} fill={COLOR.LIGHT_BLUE} >\r\n                    <PolarGrid />\r\n                    <PolarAngleAxis dataKey='entry' />\r\n                    <PolarRadiusAxis domain={[0, 100]} tick={false} axisLine={false} />\r\n                    <Radar dataKey=\"normalizedValue\" fill={COLOR.YELLOW} dot={{ fill: COLOR.LIGHT_BLUE }} />\r\n                </RadarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    ) ;\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport isempty from 'lodash.isempty';\r\nimport './PlayerStats.css';\r\nimport { getSeasonAveragesStats } from '../../api/api';\r\nimport PlayerStatsNav from '../playerStatsNav/PlayerStatsNav';\r\nimport PlayerStatsTable from '../playerStatsTable/PlayerStatsTable';\r\nimport PlayerStatsChart from '../playerStatsChart/PlayerStatsChart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMeh, faBasketballBall } from '@fortawesome/free-solid-svg-icons';\r\nimport { ToastContext } from '../contexts';\r\n\r\nexport default function PlayerStats({ playerId }) {\r\n    let [stats, setStats] = useState({});\r\n    let [season, setSeason] = useState(2019);\r\n    let [icon, setIcon] = useState({ className: 'spinner', icon: faBasketballBall, spin: true });\r\n    let [isLoadingNewPlayer, setIsLoadingNewPlayer] = useState(true);\r\n    let [isRequestPending, setIsRequestPending] = useState(true);\r\n    let { addToast } = useContext(ToastContext);\r\n\r\n    const nextSeason = async() => await getSeason(season + 1);\r\n    const prevSeason = async() => await getSeason(season - 1);\r\n\r\n    const getSeason = async(value) => {\r\n        setIsRequestPending(true);\r\n        const seasonAveragesStats = await getSeasonAveragesStats(playerId, value);\r\n        if (!isempty(seasonAveragesStats[0])) {\r\n            setStats(seasonAveragesStats[0]);\r\n            setSeason(value);\r\n        } else {\r\n            addToast(`Stats for season ${value}/${value + 1} doesn't exist`, 'danger');\r\n        }\r\n        setIsRequestPending(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsLoadingNewPlayer(true);\r\n        setIsRequestPending(true);\r\n        getSeasonAveragesStats(playerId)\r\n            .then(seasonAveragesStats => {\r\n                setStats(seasonAveragesStats[0]);\r\n                setSeason(2019);\r\n                setIsLoadingNewPlayer(false);\r\n                setIsRequestPending(false);\r\n            });\r\n    }, [playerId]);\r\n\r\n    useEffect(() => {\r\n        isRequestPending ? setIcon({ className: 'spinner', icon: faBasketballBall, spin: true }) : setIcon({ className: 'not-found-icon', icon: faMeh, spin: false });\r\n    }, [isRequestPending]);\r\n\r\n    return (\r\n        <>\r\n            {!isempty(stats)?\r\n                <>\r\n                    <PlayerStatsNav stats={stats} onClick={setSeason} isLoading={isLoadingNewPlayer} isRequestPending={isRequestPending} onClickNext={nextSeason} onClickPrev={prevSeason} />\r\n                    {!isLoadingNewPlayer &&\r\n                        <>\r\n                            <PlayerStatsTable stats={stats} />\r\n                            <PlayerStatsChart stats={stats} />\r\n                        </>\r\n                    }\r\n                </> : (\r\n                    <>\r\n                        <FontAwesomeIcon {...icon} />\r\n                        {!isRequestPending && <span className=\"not-found-msg\">Player stats not found</span>}\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport './Toast.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faExclamationCircle, faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst TYPE = {\r\n    SUCCESS: 'success',\r\n    DANGER: 'danger',\r\n    WARNING: 'warning'\r\n};\r\n\r\nconst TOAST = {\r\n    SUCCESS: { title: 'Success', icon: faCheckCircle },\r\n    DANGER: { title: 'Error', icon: faExclamationCircle },\r\n    WARNING: { title: 'Warning', icon: faExclamationTriangle },\r\n};\r\n\r\nexport default function Toast({ toast, remove }) {\r\n    let [toastStyle, setToastStyle] = useState(TOAST.SUCCESS);\r\n    let toastRemoveRef = useRef();\r\n    toastRemoveRef.current = remove;\r\n\r\n    useEffect(() => {\r\n        switch(toast.type) {\r\n            case TYPE.SUCCESS:\r\n                setToastStyle(TOAST.SUCCESS);\r\n                break;\r\n            case TYPE.DANGER:\r\n                setToastStyle(TOAST.DANGER);\r\n                break;\r\n            case TYPE.WARNING:\r\n                setToastStyle(TOAST.WARNING);\r\n                break;\r\n            default:\r\n                setToastStyle(TOAST.SUCCESS);\r\n        }\r\n    }, [toast.type]);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => toastRemoveRef.current(), 3000);\r\n\r\n        return () => clearTimeout(timeoutId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`toast toast-${toast.type}`}>\r\n            <FontAwesomeIcon className={`toast-icon icon-${toast.type}`} icon={toastStyle.icon} />\r\n            <div className=\"toast-content\">\r\n                <p className=\"toast-title\">{toastStyle.title}</p>\r\n                <p className=\"toast-message\">{toast.message}</p>\r\n            </div>\r\n            <FontAwesomeIcon className=\"toast-icon icon-close\" icon={faTimes} onClick={remove} />\r\n        </div>\r\n    );\r\n}","import React, { useState, useRef } from 'react';\r\nimport './ToastProvider.css';\r\nimport Toast from '../toast/Toast';\r\nimport { ToastContext } from '../contexts';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nexport default function ToastProvider({ children }) {\r\n    let [toasts, setToasts] = useState([]);\r\n    let toastsCount = useRef(0);\r\n\r\n    const addToast = (message, type) => {\r\n        const id = toastsCount.current++;\r\n        const toast = { message, type, id };\r\n        setToasts([...toasts, toast]);\r\n    };\r\n\r\n    const removeToast = (id) => setToasts(toasts.filter(toast => toast.id !== id));\r\n\r\n    return (\r\n        <ToastContext.Provider value={{ addToast }}>\r\n            {children}\r\n            <TransitionGroup className=\"toast-container\">\r\n                {toasts.map((toast) =>\r\n                    <CSSTransition key={toast.id} timeout={500} classNames=\"toast\">\r\n                        <Toast toast={toast} remove={() => removeToast(toast.id)} />\r\n                    </CSSTransition>\r\n                )}\r\n            </TransitionGroup>\r\n        </ToastContext.Provider>\r\n    );\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Searchbar from '../searchbar/Searchbar';\nimport PlayerDetails from '../playerDetails/PlayerDetails';\nimport PlayerStats from '../playerStats/PlayerStats';\nimport ToastProvider from '../toastProvider/ToastProvider';\n\nexport default function App() {\n  let [player, setPlayer] = useState({\n    'id': 237,\n    'first_name': 'LeBron',\n    'height_feet': 6,\n    'height_inches': 8,\n    'last_name': 'James',\n    'position': 'F',\n    'team': {\n      'id': 14,\n      'abbreviation': 'LAL',\n      'city': 'Los Angeles',\n      'conference': 'West',\n      'division': 'Pacific',\n      'full_name': 'Los Angeles Lakers',\n      'name': 'Lakers'\n    },\n    'weight_pounds': 250\n  });\n\n  return (\n    <ToastProvider>\n      <header className=\"app-header\">\n        <h1 className=\"app-title\">NBA simple stats</h1>\n        <Searchbar setPlayer={setPlayer} />\n      </header>\n      <hr />\n      <main className=\"player-container\">\n        <PlayerDetails first_name={player.first_name} last_name={player.last_name} team={player.team.full_name} />\n        <PlayerStats playerId={player.id} />\n      </main>\n    </ToastProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}